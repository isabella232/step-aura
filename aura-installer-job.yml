apiVersion: batch/v1
kind: Job
metadata:
  name: install-aura
  namespace: aura
spec:
  activeDeadlineSeconds: 60120
  backoffLimit: 10  
  template:
    spec:
      serviceAccountName: aura-job
      initContainers:
      - name: helm-install
        image: phx.ocir.io/oraclepaasmicroservices/aura/helm-base:0.2.1-SNAPSHOT
        command: ["helm",  "init", "--service-account=helm"]
        imagePullPolicy: Always
      - name: helm-ready
        image: phx.ocir.io/oraclepaasmicroservices/aura/helm-base:0.2.1-SNAPSHOT
        command: ["helm", "ls"]
        imagePullPolicy: Always
      - name: istio-install
        image: phx.ocir.io/oraclepaasmicroservices/aura/istio-install:0.2.1-SNAPSHOT
        command: ["sh", "-c", "install-istio && install-addons && install-injection"]
        imagePullPolicy: Always
      - name: api-registry
        image: phx.ocir.io/oraclepaasmicroservices/aura/api-registry-install:0.2.1-SNAPSHOT
        command: ["sh", "-c", "install-chart"]
        env:
        - name: HELM_OPTS
          value: " --set apiserver.persistence.size=50Gi --set global.images.pullpolicy=Always --set global.images.pullPolicy=Always"
        imagePullPolicy: Always
      - name: observability-tools
        image: phx.ocir.io/oraclepaasmicroservices/aura/observability-tools-install:0.2.1-SNAPSHOT
        command: ["sh", "-c", "install-chart"]
        env:
        - name: HELM_OPTS
          value: " --set apiserver.persistence.size=50Gi --set global.images.pullpolicy=Always --set global.images.pullPolicy=Always" 
        imagePullPolicy: Always
      containers:
      - name: installation-complete
        image: busybox
        command: ['sh', '-c', 'echo "Helm, Istio and Aura Installed"']
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
